// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Context;

#nullable disable

namespace Project.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20240914143816_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Description = "Fantasy literature is literature set in an imaginary universe, often but not always without any locations, events, or people from the real world",
                            Name = "Fantasy"
                        },
                        new
                        {
                            CategoryId = 2,
                            Description = "Mystery is a fiction genre where the nature of an event, usually a murder or other crime, remains mysterious until the end of the story.",
                            Name = "Mystery"
                        },
                        new
                        {
                            CategoryId = 3,
                            Description = "Horror story, a story in which the focus is on creating a feeling of fear.",
                            Name = "Horror"
                        },
                        new
                        {
                            CategoryId = 4,
                            Description = "Biography book about a single person's life and work, but probably with a great deal, too, about their family and friends, relations and children, colleagues and acquaintances.",
                            Name = "Biography"
                        },
                        new
                        {
                            CategoryId = 5,
                            Description = "Science fiction speculates about alternative ways of life made possible by technological change, and hence has sometimes been called speculative fiction.",
                            Name = "Science Fiction"
                        });
                });

            modelBuilder.Entity("Project.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Description = "West blends her unique magic system with a vivid world and fairy tale elements to create a story that is entirely fascinating.",
                            ImagePath = "https://i.ebayimg.com/images/g/~QkAAOSwU6Vf~nbt/s-l960.webp",
                            Price = 4.52m,
                            Quantity = 12,
                            Title = "Realm of Ruins"
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 2,
                            Description = "Joanna Blalock's keen mind and incredible insight lead her to become a highly-skilled nurse, one of the few professions that allow her to use her finely-tuned brain.",
                            ImagePath = "https://i.ebayimg.com/images/g/PMEAAOSwuC5f~4Vw/s-l960.webp",
                            Price = 8.23m,
                            Quantity = 33,
                            Title = "The Daughter of Sherlock Holmes"
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 3,
                            Description = "Aveline loves reading ghost stories, so a dreary half-term becomes much more exciting when she discovers a spooky old book.",
                            ImagePath = "https://i.ebayimg.com/images/g/fmAAAOSwmxNm0Rm3/s-l1600.webp",
                            Price = 13.66m,
                            Quantity = 5,
                            Title = "The Haunting of Aveline Jones"
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 4,
                            Description = "This biography describes Einstein's early struggle to harness and focus his extraordinary abilities; his relationships with his family and first wife; and, lending depth to the story, his most significant scientific.",
                            ImagePath = "https://i.ebayimg.com/images/g/K3EAAOSwWxNYpJRH/s-l960.webp",
                            Price = 6.90m,
                            Quantity = 17,
                            Title = "Who Was Albert Einstein?"
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 5,
                            Description = "Trapped in cryo-sleep for two centuries, Auri is a girl out of time and out of her depth. But she could be the catalyst that starts a war millions of years in the making, and Tyler's squad of losers, discipline cases, and misfits might just be the last hope for the entire galaxy.",
                            ImagePath = "https://i.ebayimg.com/images/g/YZsAAOSwyvdmylVw/s-l960.webp",
                            Price = 17.91m,
                            Quantity = 55,
                            Title = "Aurora Rising"
                        });
                });

            modelBuilder.Entity("Project.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Project.Models.Product", b =>
                {
                    b.HasOne("Project.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Project.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
